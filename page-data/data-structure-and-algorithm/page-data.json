{"componentChunkName":"component---src-templates-docs-js","path":"/data-structure-and-algorithm","result":{"data":{"site":{"siteMetadata":{"title":"DevBucket","docsLocation":""}},"mdx":{"fields":{"id":"adf9b609-909b-520d-9288-c6a5982f52e9","title":"Data Structure and Algorithm","slug":"/data-structure-and-algorithm"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Data Structure and Algorithm\",\n  \"metaTitle\": \"Data Structure and Algorithm | DevBucket\",\n  \"metaDescription\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introduction\"), mdx(\"h2\", null, \"Table of content\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introduction to Data Structure and Algorithm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic concepts and notations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NP-hard and NP-complete problems\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data Structure\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arrays\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Strings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linked Lists\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Matrix/Grid\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Queues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Heap\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hash\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tree\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Graph\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tuple and Sets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trie\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Algorithm\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Searching algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sorting algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Divide and conquer algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Greedy methodology\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recursion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Backtracking algorithm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dynamic Programming\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pattern Searching\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mathematical algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Geometric algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bitwise algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Randomized algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Branch and Bound algorithm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Math and Bit Manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Approximation algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sliding Window algorithms\")))), mdx(\"h2\", null, \"Resources\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#introduction","title":"Introduction"},{"url":"#table-of-content","title":"Table of content"},{"url":"#resources","title":"Resources"}]},"parent":{"relativePath":"data-structure-and-algorithm.md"},"frontmatter":{"metaTitle":"Data Structure and Algorithm | DevBucket","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/software-design-and-architecture/1.clean-code/learn","title":"Clean Code Daily Read"}}},{"node":{"fields":{"slug":"/programming-languages-libraries-and-frameworks/react-js/reack-hooks","title":"React Hooks"}}},{"node":{"fields":{"slug":"/data-structure-and-algorithm/1.introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/data-structure-and-algorithm/2.data-structure","title":"Data Structure"}}},{"node":{"fields":{"slug":"/data-structure-and-algorithm/3.algorithim","title":"Algorithm"}}},{"node":{"fields":{"slug":"/programming-languages-libraries-and-frameworks/go","title":"GO"}}},{"node":{"fields":{"slug":"/programming-languages-libraries-and-frameworks/html","title":"HTML"}}},{"node":{"fields":{"slug":"/programming-languages-libraries-and-frameworks/javascript","title":"JavaScript"}}},{"node":{"fields":{"slug":"/programming-languages-libraries-and-frameworks/node-js","title":"NodeJS"}}},{"node":{"fields":{"slug":"/programming-languages-libraries-and-frameworks/react-js","title":"ReactJS"}}},{"node":{"fields":{"slug":"/software-design-and-architecture/1.clean-code","title":"Clean Code"}}},{"node":{"fields":{"slug":"/software-design-and-architecture/2.programming-paradigms","title":"Programming Paradigms"}}},{"node":{"fields":{"slug":"/web-application-design-principles-and-architecture/1.web-application-development","title":"Web Application Development"}}},{"node":{"fields":{"slug":"/web-application-design-principles-and-architecture/2.web-application-security","title":"Web Application Security and Threat Protection"}}},{"node":{"fields":{"slug":"/data-structure-and-algorithm","title":"Data Structure and Algorithm"}}},{"node":{"fields":{"slug":"/programming-languages-libraries-and-frameworks","title":"Programming Language"}}},{"node":{"fields":{"slug":"/software-design-and-architecture","title":"Software Design and Architecture"}}},{"node":{"fields":{"slug":"/web-application-design-principles-and-architecture","title":"Web Application Design and Architecture"}}},{"node":{"fields":{"slug":"/system-design-principles-and-architecture","title":"System Design and Architecture"}}},{"node":{"fields":{"slug":"/","title":"DevBucket"}}}]}},"pageContext":{"id":"adf9b609-909b-520d-9288-c6a5982f52e9"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}